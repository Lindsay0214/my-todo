{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","alert","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","wasEditing","ref","useRef","useEffect","current","usePrevious","editFieldRef","editButtonRef","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","headingText","length","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd7520f0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name === \"\") {\n      alert(\"填入你的代辦事項！！！\");\n    } else if (name !== \"\") {\n      props.addTask(name);\n      setName(\"\");\n    }\n  }\n\n  function handleChange(e) {\n    // console.log(e.target.value) 抓到輸入的值\n    // setName 不只記錄，更儲存狀態\n    setName(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          還有什麼事沒做 ......\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"on\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n\n  const wasEditing = usePrevious(isEditing);\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          把 {props.name} 改成\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn btn__edit\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function deleteAllTask() {\n    setTasks([]);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const headingText = `這 裡 有  ${taskList.length}  件 任 務 (⁎˃ᆺ˂)`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todo-app stack-large\">\n      <h1>待 辦 事 項</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul className=\"todo-list stack-large stack-exception\">{taskList}</ul>\n      <button className=\"delete-all-button\" onClick={deleteAllTask}>\n        Delete All\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst DATA = [\n  { id: \"todo-0\", name: \"完成 todo list\", completed: true },\n  { id: \"todo-1\", name: \"完成 final project\", completed: false },\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}